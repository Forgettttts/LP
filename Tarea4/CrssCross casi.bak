#lang scheme
(define numeroAzar
  (lambda (lista)
    (random (length lista)) 
    )
  )

(define armarListasNuevas
  (lambda (lista1 lista2 limiteInferior limiteSuperior PonerUnCero newList1)
    (let armar ((listaOriginal lista1)(listaOriginal2 lista2)(limite1 limiteInferior)(limite2 limiteSuperior)(iteracion PonerUnCero)(nuevaLista newList1))
      (if (not(= iteracion (length listaOriginal))) ;; Si es que no estamos en el final de las listas, hay que seguir trabajando
          (cond
            [(or (< iteracion limite1)(>= iteracion limite2))
             (armar (cdr listaOriginal )(cdr listaOriginal2 )limite1 limite2 (+ iteracion 1) (append (list(car listaOriginal ))))
             ]
            [(and(>= iteracion limite1)(< iteracion limite2));;Si es que estamis bsobre el limite inferior, y bajo el superior, hay que añadir desde la 2
             (armar (cdr listaOriginal )(cdr listaOriginal2 )limite1 limite2 (+ iteracion 1) (append (list(car listaOriginal2 ))))
             ]
            )
          (display nuevaLista)
          )
      )
    )
  )

(define crossrd
  (lambda (l1 l2)
    (cond
      [(= (length l1) 0) "La primera lista esta vacia, ingrese dos listas del mismo tamaño."]
      [(= (length l2) 0) "La segunda lista esta vacia, ingrese dos listas del mismo tamaño."]
      [(> (length l1) (length l2)) "La primera lista es mas larga que la segunda, ingrese listas del mismo tamaño"]
      [(< (length l1) (length l2)) "La segunda lista es mas larga que la primera, ingrese listas del mismo tamaño"]
      [else
       (let ((corte1 (numeroAzar l1 )) (corte2 (+(numeroAzar l1 ) 1)) ( listaDeSalida (list)) )
         (cond
           [(= corte1 corte2)
            (armarListasNuevas l1 l2 corte1 corte2 0 listaDeSalida )
            (armarListasNuevas l2 l1 corte1 corte2 0 listaDeSalida )
            ]
           [(> corte1 corte2)
            (armarListasNuevas l1 l2 corte2 corte1 0 listaDeSalida)
            (armarListasNuevas l2 l1 corte2 corte1 0 listaDeSalida)
            ]
           [(< corte1 corte2)
            (armarListasNuevas l1 l2 corte1 corte2 0 listaDeSalida)
            (armarListasNuevas l2 l1 corte1 corte2 0 listaDeSalida)
            ]
           )
         )
       ]
      )
    )
  )
(crossrd '(1 2 3 4) '(a b c d))
